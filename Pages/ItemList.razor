@page "/"
@using RustaConsumerList.Pages
@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Hosting
@using Microsoft.AspNetCore.Components.Forms
@using Blazority;
@using System.Threading.Tasks;
@using System.Linq;
@using System.IO;
@using System.Collections.Generic;
@using RustaConsumerList.Models;
@using RustaConsumerList.Services;

@inject ConsItemService ConItemDb

<link href="/css/RustaStyleSheet.css" rel="stylesheet" type="text/css" />

<div style="height:60px"></div>
<div style="width:90%;margin-left:auto;margin-right:auto">
    <div style="width:100%;">
        <br />
        @if (!CategoryClicked)
        {
            @foreach (string Category in Categories)
            {
                <div class="DivSize hoverOutline" @onclick="() => DivClicked(Category)">
                    <img class="imageSize" src="/images/ImageMissing.png" alt="Image Missing" asp-append-version="true" />
                    <p class="limit">@Category</p>
                </div>
            }
        }

        @if (CategoryClicked)
        {
            <textbox>@TestDouble</textbox>
            RowList = new();

            @foreach (var item in AllItems)
            {
                @if (NewRow == 7)
                {
                    NewRow = 0;
                    BoolList.Add(true);


                    <div class="DropDownSize" hidden="@BoolList[NewRowId]">
                        <p>@BoolList[NewRowId]</p>
                    </div>
                    NewRowId++;
                }

                if (item.Category == CatChoise)
                {
                    NewRow++;
                    RowList.Add(NewRowId);
                    item.DynamicRow = NewRowId;

                    <div class="DivSize hoverOutline" @onclick="e => Div_Click(item.DynamicRow)">
                        <img class="imageSize" src="/images/ImageMissing.png" alt="Image Missing" />
                        <p class="limit">@item.Name</p>
                    </div>
                }
            }

            NewRow = 0;
            BoolList.Add(true);


            <div class="DropDownSize" hidden="@BoolList[NewRowId]">
                <p>@BoolList[NewRowId]</p>
            </div>

            NewRowId = 0;
            NewRow = 0;
        }
    </div>
</div>


@code{

    public string TestDouble { get; set; }
    public string Image { get; set; }
    public int NewRow { get; set; }
    public int NewRowId = 0;
    public bool showit = false;
    public List<bool> BoolList { get; set; }
    public List<int> RowList { get; set; }

    protected override async Task OnInitializedAsync()
    {
        BoolList = new();
        RowList = new();
        NewRow = 0;
        NewRowId = 0;
        AllItems = (await ConItemDb.GetItems()).ToList();
        foreach (var item in AllItems)
        {
            if (!Categories.Contains(item.Category))
            {
                Categories.Add(item.Category);
            }
        }
        this.StateHasChanged();
    }

    public void Div_Click(int RowId)
    {
        if (BoolList.Contains(false))
        {
            for (int i = 0; i < BoolList.Count(); i++)
            {
                BoolList[i] = true;
            }
        }

        BoolList[RowId] = !BoolList[RowId];
        StateHasChanged();
    }

    #region Categorys
    public List<ConsumptionProduct> AllItems = new List<ConsumptionProduct>();
    public static List<string> Categories = new List<string>();

    public static bool CategoryClicked = false;

    public static string CatChoise = "";

    private async Task DivClicked(string Category)
    {
        CategoryClicked = true;
        CatChoise = Category;
    }
    #endregion

}